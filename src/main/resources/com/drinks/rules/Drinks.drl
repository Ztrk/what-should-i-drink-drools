package com.drinks.rules

import java.util.List;
import java.util.ArrayList;
import com.drinks.Drinks;

// Declarations
global Drinks drinksApp;

declare enum Answer
    YES, NO;
end

declare Fact
    name : String
    answer : Answer
end

declare Drink
    name : String
end
 
// Ask questions to the user
rule "In Mexico"
    when
        // Empty
    then
        drinksApp.ask("Are you in mexico?\n(or in a Mexican restaurant?)",
                      "in_mexico");
end

rule "PwN nOoBs"
    when
        Fact(name == "in_mexico", answer == Answer.NO)
    then
        drinksApp.ask("Do you PwN nOoBs?", "pwn_noobs");
end

rule "On a diet"
    when
        Fact(name == "pwn_noobs", answer == Answer.NO)
    then
        drinksApp.ask("Are you on a diet?", "on_a_diet");
end

rule "Ostentatious"
    when
        Fact(name == "on_a_diet", answer == Answer.YES)
    then
        drinksApp.ask("Are you ostentatious?", "ostentatious");
end

rule "Need a boost"
    when
        Fact(name == "ostentatious", answer == Answer.NO)
    then
        drinksApp.ask("Do you need a boost?", "need_a_boost");
end

rule "Animated"
    when
        Fact(name == "on_a_diet", answer == Answer.NO)
    then
        drinksApp.ask("Are you animated?", "animated");
end

rule "Juggalo"
    when
        Fact(name == "animated", answer == Answer.NO)
    then
        drinksApp.ask("Are you a juggalo?", "juggalo");
end

rule "Aftertaste of dirt"
    when
        Fact(name == "juggalo", answer == Answer.NO)
    then
        drinksApp.ask("Do you like the aftertaste of dirt?", "aftertaste_of_dirt");
end

rule "Tay Zonday"
    when
        Fact(name == "aftertaste_of_dirt", answer == Answer.NO)
    then
        drinksApp.ask("Are you Tay Zonday?", "tay_zonday");
end

rule "In Brazil"
    when
        Fact(name == "tay_zonday", answer == Answer.NO)
    then
        drinksApp.ask("Are you in Brazil?", "in_brazil");
end

rule "On the dole"
    when
        Fact(name == "in_brazil", answer == Answer.NO)
    then
        drinksApp.ask("Are you on the dole?", "on_the_dole");
end

rule "Flux capacitor"
    when
        Fact(name == "on_the_dole", answer == Answer.NO)
    then
        drinksApp.ask("Have you the flux capacitor?", "flux_capacitor");
end

rule "Bubble gum"
    when
        Fact(name == "flux_capacitor", answer == Answer.NO)
    then
        drinksApp.ask("Do you like drinking bubble gum?", "bubble_gum");
end

rule "All-nighter"
    when
        Fact(name == "bubble_gum", answer == Answer.NO)
    then
        drinksApp.ask("Are you pulling an all-nighter?", "all_nighter");
end

rule "Shopping at Tesco"
    when
        Fact(name == "all_nighter", answer == Answer.NO)
    then
        drinksApp.ask("Are you shopping at Tesco?", "shopping_at_tesco");
end

rule "At a picnic"
    when
        Fact(name == "shopping_at_tesco", answer == Answer.NO)
    then
        drinksApp.ask("Are you at a picnic?", "at_a_picnic");
end

rule "Buy any of these"
    when
        Fact(name == "at_a_picnic", answer == Answer.NO)
    then
        // TO DO
        // add names or display some images
        drinksApp.ask("Can you buy any of these?", "buy_any_of_these");
end

rule "Enjoy Tyler Perry"
    when
        Fact(name == "buy_any_of_these", answer == Answer.NO)
    then
        drinksApp.ask("Do you enjoy Tyler Perry movies?", "enjoy_tyler_perry");
end

rule "Root beer"
    when
        Fact(name == "enjoy_tyler_perry", answer == Answer.NO)
    then
        drinksApp.ask("Do you want root beer?", "root_beer");
end

rule "Quality root beer"
    when
        Fact(name == "root_beer", answer == Answer.YES)
    then
        drinksApp.ask("Do you care about quality?", "quality_root_beer");
end

rule "Tummy ache"
    when
        Fact(name == "root_beer", answer == Answer.NO)
    then
        drinksApp.ask("Do you have a tummy ache?\n(...or are you trying to be classy?)",
                      "tummy_ache");
end

rule "HFCS"
    when
        Fact(name == "tummy_ache", answer == Answer.NO)
    then
        drinksApp.ask("Do you care about HFCS?", "hfcs");
end

rule "HFCS and taste"
    when
        Fact(name == "hfcs", answer == Answer.YES)
    then
        drinksApp.ask("...and taste?", "hfcs_and_taste");
end

rule "Cherry"
    when
        Fact(name == "hfcs", answer == Answer.NO)
    then
        drinksApp.ask("Do you enjoy \"cherry\" with your beverage?", "cherry");
end

rule "Caffeine"
    when
        Fact(name == "cherry", answer == Answer.NO)
    then
        drinksApp.ask("Can you tolerate caffeine?", "caffeine");
end

rule "Backpack"
    when
        Fact(name == "caffeine", answer == Answer.YES)
    then
        drinksApp.ask("Do you carry a backpack?", "backpack");
end

rule "Singing tastebuds"
    when
        Fact(name == "backpack", answer == Answer.NO)
    then
        drinksApp.ask("Do you want your tastebuds to sing?", "singing_tastebuds");
end

rule "Long for simpler days"
    when
        Fact(name == "singing_tastebuds", answer == Answer.NO)
    then
        drinksApp.ask("Do you long for \"the simpler\" days?", "long_for_simpler_days");
end

// Present results
rule "Drinks in Mexico"
    when
        Fact(name == "in_mexico", answer == Answer.YES)
    then
        List<Object> drinks = new ArrayList<>();
        drinks.add(new Drink("Jarritos"));
        drinksApp.presentResults(drinks);
end

rule "Drinks PwN nOoBs"
    when
        Fact(name == "pwn_noobs", answer == Answer.YES)
    then
        List<Object> drinks = new ArrayList<>();
        drinks.add(new Drink("Mountian Dew Code Red"));
        drinks.add(new Drink("Bawls Gurana"));
        drinks.add(new Drink("Jolt Cola"));
        drinks.add(new Drink("Mello Yello"));
        drinksApp.presentResults(drinks);
end

rule "Drinks ostentatious"
    when
        Fact(name == "ostentatious", answer == Answer.YES)
    then
        List<Object> drinks = new ArrayList<>();
        drinks.add(new Drink("Diet Rite Pure Zero"));
        drinks.add(new Drink("Zevia"));
        drinks.add(new Drink("Blue Sky Organic"));
        drinks.add(new Drink("Hansen's Diet"));
        drinksApp.presentResults(drinks);
end

rule "Drinks no boost"
    when
        Fact(name == "need_a_boost", answer == Answer.NO)
    then
        List<Object> drinks = new ArrayList<>();
        drinks.add(new Drink("Barq's Diet"));
        drinks.add(new Drink("Fresca"));
        drinks.add(new Drink("A&W Diet"));
        drinks.add(new Drink("7Up Free"));
        drinks.add(new Drink("Sprite Zero"));
        drinksApp.presentResults(drinks);
end

rule "Drinks need a boost"
    when
        Fact(name == "need_a_boost", answer == Answer.YES)
    then
        List<Object> drinks = new ArrayList<>();
        drinks.add(new Drink("Coke Diet"));
        drinks.add(new Drink("Dr Pepper Diet"));
        drinks.add(new Drink("Pepsi Diet"));
        drinks.add(new Drink("Coca-Cola Diet"));
        drinksApp.presentResults(drinks);
end